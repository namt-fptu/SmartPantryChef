<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.SmartPantryChef&quot;&#10;        android:usesCleartextTraffic=&quot;false&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;    &lt;/application&gt;&#10;&#10;    &lt;queries&gt;&#10;        &lt;intent&gt;&#10;            &lt;action android:name=&quot;android.media.action.IMAGE_CAPTURE&quot; /&gt;&#10;        &lt;/intent&gt;&#10;    &lt;/queries&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#13;&#10;&#13;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#13;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;application&#13;&#10;        android:allowBackup=&quot;true&quot;&#13;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#13;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#13;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#13;&#10;        android:label=&quot;@string/app_name&quot;&#13;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#13;&#10;        android:supportsRtl=&quot;true&quot;&#13;&#10;        android:theme=&quot;@style/Theme.SmartPantryChef&quot;&#13;&#10;        android:usesCleartextTraffic=&quot;false&quot;&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.MainActivity&quot;&#13;&#10;            android:exported=&quot;true&quot;&#13;&#10;            android:theme=&quot;@style/Theme.BepSVThongMinh.Splash&quot;&gt;&#13;&#10;            &lt;intent-filter&gt;&#13;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#13;&#10;&#13;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#13;&#10;            &lt;/intent-filter&gt;&#13;&#10;        &lt;/activity&gt;&#13;&#10;    &lt;/application&gt;&#13;&#10;&#13;&#10;    &lt;queries&gt;&#13;&#10;        &lt;intent&gt;&#13;&#10;            &lt;action android:name=&quot;android.media.action.IMAGE_CAPTURE&quot; /&gt;&#13;&#10;        &lt;/intent&gt;&#13;&#10;    &lt;/queries&gt;&#13;&#10;&#13;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/fpt/edu/vn/smartpantrychef/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/fpt/edu/vn/smartpantrychef/MainActivity.java" />
              <option name="originalContent" value="package fpt.edu.vn.smartpantrychef;&#10;&#10;import android.Manifest;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.graphics.Bitmap;&#10;import android.net.Uri;&#10;import android.os.Build;&#10;import android.os.Bundle;&#10;import android.provider.MediaStore;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.appcompat.app.AlertDialog;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.chip.Chip;&#10;import com.google.mlkit.vision.common.InputImage;&#10;import com.google.mlkit.vision.label.ImageLabel;&#10;import com.google.mlkit.vision.label.ImageLabeler;&#10;import com.google.mlkit.vision.label.ImageLabeling;&#10;import com.google.mlkit.vision.label.defaults.ImageLabelerOptions;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;&#10;import fpt.edu.vn.smartpantrychef.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private ActivityMainBinding binding;&#10;    private Bitmap capturedBitmap;&#10;&#10;    // Trình khởi chạy yêu cầu quyền&#10;    private ActivityResultLauncher&lt;String&gt; requestCameraPermissionLauncher;&#10;    private ActivityResultLauncher&lt;String&gt; requestGalleryPermissionLauncher;&#10;&#10;    // Trình khởi chạy camera và thư viện&#10;    private ActivityResultLauncher&lt;Void&gt; cameraLauncher;&#10;    private ActivityResultLauncher&lt;Intent&gt; galleryLauncher;&#10;&#10;    // ML Kit Image Labeler&#10;    private ImageLabeler labeler;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Khởi tạo ML Kit labeler&#10;        labeler = ImageLabeling.getClient(ImageLabelerOptions.DEFAULT_OPTIONS);&#10;&#10;        // Khởi tạo trình khởi chạy yêu cầu quyền camera&#10;        requestCameraPermissionLauncher = registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -&gt; {&#10;            if (isGranted) {&#10;                Toast.makeText(this, &quot;Quyền camera đã được cấp&quot;, Toast.LENGTH_SHORT).show();&#10;                openCamera();&#10;            } else {&#10;                showPermissionDeniedDialog(&quot;Cần quyền camera để chụp ảnh nguyên liệu.&quot;);&#10;            }&#10;        });&#10;&#10;        // Khởi tạo trình khởi chạy yêu cầu quyền truy cập thư viện&#10;        requestGalleryPermissionLauncher = registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -&gt; {&#10;            if (isGranted) {&#10;                Toast.makeText(this, &quot;Quyền truy cập thư viện đã được cấp&quot;, Toast.LENGTH_SHORT).show();&#10;                openGallery();&#10;            } else {&#10;                showPermissionDeniedDialog(&quot;Cần quyền truy cập thư viện để chọn ảnh.&quot;);&#10;            }&#10;        });&#10;&#10;        // Khởi tạo trình khởi chạy camera&#10;        cameraLauncher = registerForActivityResult(new ActivityResultContracts.TakePicturePreview(), this::handleImageResult);&#10;&#10;        // Khởi tạo trình khởi chạy thư viện&#10;        galleryLauncher = registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -&gt; {&#10;            if (result.getResultCode() == RESULT_OK &amp;&amp; result.getData() != null) {&#10;                Uri imageUri = result.getData().getData();&#10;                try {&#10;                    Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), imageUri);&#10;                    handleImageResult(bitmap);&#10;                } catch (IOException e) {&#10;                    Log.e(TAG, &quot;Error converting URI to Bitmap&quot;, e);&#10;                    Toast.makeText(this, &quot;Không thể tải ảnh từ thư viện&quot;, Toast.LENGTH_SHORT).show();&#10;                }&#10;            } else {&#10;                Toast.makeText(this, &quot;Đã hủy chọn ảnh&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;&#10;        // Thiết lập sự kiện click&#10;        binding.tvEmptyState.setOnClickListener(v -&gt; openCamera());&#10;        binding.btnRetake.setOnClickListener(v -&gt; openCamera());&#10;        binding.btnChooseFromGallery.setOnClickListener(v -&gt; openGallery());&#10;    }&#10;&#10;    // Xử lý kết quả ảnh (từ camera hoặc thư viện)&#10;    private void handleImageResult(Bitmap bitmap) {&#10;        if (bitmap != null) {&#10;            try {&#10;                capturedBitmap = bitmap;&#10;                binding.tvEmptyState.setVisibility(View.GONE);&#10;                binding.cardPreview.setVisibility(View.VISIBLE);&#10;                binding.buttonsLayout.setVisibility(View.VISIBLE);&#10;                Glide.with(this).load(capturedBitmap).into(binding.ivImage);&#10;                Toast.makeText(this, &quot;Đang phân tích ảnh...&quot;, Toast.LENGTH_SHORT).show();&#10;                analyzeImage(capturedBitmap);&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error processing image result&quot;, e);&#10;                Toast.makeText(this, &quot;Có lỗi xảy ra khi xử lý ảnh&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        } else {&#10;            Toast.makeText(this, &quot;Không nhận được ảnh&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    // Kiểm tra và yêu cầu quyền truy cập camera&#10;    private void openCamera() {&#10;        if (checkCameraPermission()) {&#10;            try {&#10;                cameraLauncher.launch(null);&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Cannot open camera&quot;, e);&#10;                Toast.makeText(this, &quot;Không thể mở camera&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        }&#10;    }&#10;&#10;    // Kiểm tra và yêu cầu quyền truy cập thư viện&#10;    private void openGallery() {&#10;        if (checkGalleryPermission()) {&#10;            Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);&#10;            galleryLauncher.launch(intent);&#10;        }&#10;    }&#10;&#10;    // Kiểm tra quyền truy cập camera&#10;    private boolean checkCameraPermission() {&#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {&#10;            return true;&#10;        } else {&#10;            requestCameraPermissionLauncher.launch(Manifest.permission.CAMERA);&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // Kiểm tra quyền truy cập thư viện&#10;    private boolean checkGalleryPermission() {&#10;        String permission = Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU ?&#10;                Manifest.permission.READ_MEDIA_IMAGES : Manifest.permission.READ_EXTERNAL_STORAGE;&#10;&#10;        if (ContextCompat.checkSelfPermission(this, permission) == PackageManager.PERMISSION_GRANTED) {&#10;            return true;&#10;        } else {&#10;            requestGalleryPermissionLauncher.launch(permission);&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // Hiển thị hộp thoại khi quyền bị từ chối&#10;    private void showPermissionDeniedDialog(String message) {&#10;        new AlertDialog.Builder(this)&#10;                .setTitle(&quot;Yêu cầu quyền&quot;)&#10;                .setMessage(message + &quot; Vui lòng cấp quyền trong cài đặt ứng dụng.&quot;)&#10;                .setPositiveButton(&quot;OK&quot;, (dialog, which) -&gt; dialog.dismiss())&#10;                .create()&#10;                .show();&#10;    }&#10;&#10;    // Phân tích ảnh bằng ML Kit&#10;    private void analyzeImage(Bitmap bitmap) {&#10;        if (bitmap == null) {&#10;            Toast.makeText(this, &quot;Ảnh không hợp lệ&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;        binding.progressBar.setVisibility(View.VISIBLE);&#10;        binding.btnFindRecipe.setVisibility(View.GONE);&#10;        binding.chipGroupIngredients.removeAllViews();&#10;&#10;        InputImage image = InputImage.fromBitmap(bitmap, 0);&#10;        labeler.process(image)&#10;                .addOnSuccessListener(labels -&gt; {&#10;                    ArrayList&lt;String&gt; detectedIngredients = new ArrayList&lt;&gt;();&#10;                    for (ImageLabel label : labels) {&#10;                        if (label.getConfidence() &gt; 0.6f) {&#10;                            String ingredient = label.getText();&#10;                            detectedIngredients.add(ingredient);&#10;                            addIngredientChip(ingredient);&#10;                        }&#10;                    }&#10;                    binding.progressBar.setVisibility(View.GONE);&#10;                    if (!detectedIngredients.isEmpty()) {&#10;                        binding.layoutIngredientsSection.setVisibility(View.VISIBLE);&#10;                        binding.btnFindRecipe.setVisibility(View.VISIBLE);&#10;                    } else {&#10;                        Toast.makeText(this, &quot;Không phát hiện nguyên liệu nào&quot;, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    binding.progressBar.setVisibility(View.GONE);&#10;                    Log.e(TAG, &quot;Image labeling failed&quot;, e);&#10;                    Toast.makeText(this, &quot;Lỗi phân tích ảnh: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    // Thêm chip nguyên liệu vào ChipGroup&#10;    private void addIngredientChip(String ingredient) {&#10;        Chip chip = new Chip(this);&#10;        chip.setText(ingredient);&#10;        chip.setCloseIconVisible(true);&#10;        chip.setOnCloseIconClickListener(v -&gt; binding.chipGroupIngredients.removeView(chip));&#10;        binding.chipGroupIngredients.addView(chip);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package fpt.edu.vn.smartpantrychef;&#10;&#10;import android.Manifest;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.graphics.Bitmap;&#10;import android.net.Uri;&#10;import android.os.Build;&#10;import android.os.Bundle;&#10;import android.provider.MediaStore;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.view.animation.AnimationUtils;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.appcompat.app.AlertDialog;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.lifecycle.ViewModelProvider;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.facebook.shimmer.ShimmerFrameLayout;&#10;import com.google.android.material.chip.Chip;&#10;import com.google.android.material.snackbar.Snackbar;&#10;import com.google.mlkit.vision.common.InputImage;&#10;import com.google.mlkit.vision.label.ImageLabel;&#10;import com.google.mlkit.vision.label.ImageLabeler;&#10;import com.google.mlkit.vision.label.ImageLabeling;&#10;import com.google.mlkit.vision.label.defaults.ImageLabelerOptions;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;import android.net.ConnectivityManager;&#10;import android.net.NetworkCapabilities;&#10;&#10;import fpt.edu.vn.smartpantrychef.databinding.ActivityMainBinding;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private ActivityMainBinding binding;&#10;    private Bitmap capturedBitmap;&#10;&#10;    // Trình khởi chạy yêu cầu quyền&#10;    private ActivityResultLauncher&lt;String&gt; requestCameraPermissionLauncher;&#10;    private ActivityResultLauncher&lt;String&gt; requestGalleryPermissionLauncher;&#10;&#10;    // Trình khởi chạy camera và thư viện&#10;    private ActivityResultLauncher&lt;Void&gt; cameraLauncher;&#10;    private ActivityResultLauncher&lt;Intent&gt; galleryLauncher;&#10;&#10;    // ML Kit Image Labeler&#10;    private ImageLabeler labeler;&#10;&#10;    private MainViewModel viewModel;&#10;    private List&lt;String&gt; detectedIngredients = new ArrayList&lt;&gt;();&#10;    private ShimmerFrameLayout shimmerLayout;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityMainBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Khởi tạo ML Kit labeler&#10;        labeler = ImageLabeling.getClient(ImageLabelerOptions.DEFAULT_OPTIONS);&#10;&#10;        // Khởi tạo trình khởi chạy yêu cầu quyền camera&#10;        requestCameraPermissionLauncher = registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -&gt; {&#10;            if (isGranted) {&#10;                Toast.makeText(this, &quot;Quyền camera đã được cấp&quot;, Toast.LENGTH_SHORT).show();&#10;                openCamera();&#10;            } else {&#10;                showPermissionDeniedDialog(&quot;Cần quyền camera để chụp ảnh nguyên liệu.&quot;);&#10;            }&#10;        });&#10;&#10;        // Khởi tạo trình khởi chạy yêu cầu quyền truy cập thư viện&#10;        requestGalleryPermissionLauncher = registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -&gt; {&#10;            if (isGranted) {&#10;                Toast.makeText(this, &quot;Quyền truy cập thư viện đã được cấp&quot;, Toast.LENGTH_SHORT).show();&#10;                openGallery();&#10;            } else {&#10;                showPermissionDeniedDialog(&quot;Cần quyền truy cập thư viện để chọn ảnh.&quot;);&#10;            }&#10;        });&#10;&#10;        // Khởi tạo trình khởi chạy camera&#10;        cameraLauncher = registerForActivityResult(new ActivityResultContracts.TakePicturePreview(), this::handleImageResult);&#10;&#10;        // Khởi tạo trình khởi chạy thư viện&#10;        galleryLauncher = registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -&gt; {&#10;            if (result.getResultCode() == RESULT_OK &amp;&amp; result.getData() != null) {&#10;                Uri imageUri = result.getData().getData();&#10;                try {&#10;                    Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), imageUri);&#10;                    handleImageResult(bitmap);&#10;                } catch (IOException e) {&#10;                    Log.e(TAG, &quot;Error converting URI to Bitmap&quot;, e);&#10;                    Toast.makeText(this, &quot;Không thể tải ảnh từ thư viện&quot;, Toast.LENGTH_SHORT).show();&#10;                }&#10;            } else {&#10;                Toast.makeText(this, &quot;Đã hủy chọn ảnh&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;&#10;        // Initialize ViewModel&#10;        viewModel = new ViewModelProvider(this).get(MainViewModel.class);&#10;&#10;        // Observe isLoading LiveData&#10;        viewModel.getIsLoading().observe(this, isLoading -&gt; {&#10;            if (isLoading != null &amp;&amp; isLoading) {&#10;                binding.progressBar.setVisibility(View.VISIBLE);&#10;                binding.btnFindRecipe.setEnabled(false);&#10;            } else {&#10;                binding.progressBar.setVisibility(View.GONE);&#10;                binding.btnFindRecipe.setEnabled(true);&#10;            }&#10;        });&#10;&#10;        // Observe recipeResponse LiveData&#10;        viewModel.getRecipeResponse().observe(this, recipe -&gt; {&#10;            if (recipe != null &amp;&amp; !recipe.isEmpty()) {&#10;                Intent intent = new Intent(MainActivity.this, RecipeActivity.class);&#10;                intent.putExtra(&quot;RECIPE_TEXT&quot;, recipe);&#10;                startActivity(intent);&#10;            }&#10;        });&#10;&#10;        // Observe errorMessage LiveData&#10;        viewModel.getErrorMessage().observe(this, error -&gt; {&#10;            if (error != null) {&#10;                Toast.makeText(this, &quot;Lỗi: &quot; + error, Toast.LENGTH_LONG).show();&#10;            }&#10;        });&#10;&#10;        // Thiết lập sự kiện click&#10;        binding.tvEmptyState.setOnClickListener(v -&gt; openCamera());&#10;        binding.btnRetake.setOnClickListener(v -&gt; openCamera());&#10;        binding.btnChooseFromGallery.setOnClickListener(v -&gt; openGallery());&#10;        binding.btnFindRecipe.setOnClickListener(v -&gt; {&#10;            try {&#10;                detectedIngredients.clear();&#10;                for (int i = 0; i &lt; binding.chipGroupIngredients.getChildCount(); i++) {&#10;                    View chipView = binding.chipGroupIngredients.getChildAt(i);&#10;                    if (chipView instanceof Chip) {&#10;                        CharSequence text = ((Chip) chipView).getText();&#10;                        if (text != null &amp;&amp; !text.toString().trim().isEmpty()) {&#10;                            detectedIngredients.add(text.toString().trim());&#10;                        }&#10;                    }&#10;                }&#10;                if (!detectedIngredients.isEmpty()) {&#10;                    if (!isNetworkAvailable()) {&#10;                        showError(&quot;Không có kết nối mạng. Vui lòng kiểm tra lại.&quot;);&#10;                        return;&#10;                    }&#10;                    viewModel.getRecipes(detectedIngredients);&#10;                } else {&#10;                    showError(&quot;Chưa có nguyên liệu nào&quot;);&#10;                }&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error collecting ingredients&quot;, e);&#10;                showError(&quot;Lỗi khi lấy nguyên liệu: &quot; + e.getMessage());&#10;            }&#10;        });&#10;&#10;        shimmerLayout = findViewById(R.id.shimmerLayout);&#10;    }&#10;&#10;    // Xử lý kết quả ảnh (từ camera hoặc thư viện)&#10;    private void handleImageResult(Bitmap bitmap) {&#10;        if (bitmap != null) {&#10;            try {&#10;                capturedBitmap = bitmap;&#10;                binding.tvEmptyState.setVisibility(View.GONE);&#10;                binding.cardPreview.setVisibility(View.VISIBLE);&#10;                binding.buttonsLayout.setVisibility(View.VISIBLE);&#10;                binding.imageViewPreview.setImageBitmap(capturedBitmap);&#10;                binding.imageViewPreview.startAnimation(AnimationUtils.loadAnimation(this, R.anim.fade_in));&#10;                startShimmer();&#10;                showError(&quot;Đang phân tích ảnh...&quot;);&#10;                analyzeImage(capturedBitmap);&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Error processing image result&quot;, e);&#10;                showError(&quot;Có lỗi xảy ra khi xử lý ảnh: &quot; + e.getMessage());&#10;                stopShimmer();&#10;            }&#10;        } else {&#10;            showError(&quot;Không nhận được ảnh&quot;);&#10;            stopShimmer();&#10;        }&#10;    }&#10;&#10;    // Kiểm tra và yêu cầu quyền truy cập camera&#10;    private void openCamera() {&#10;        if (checkCameraPermission()) {&#10;            try {&#10;                cameraLauncher.launch(null);&#10;            } catch (Exception e) {&#10;                Log.e(TAG, &quot;Cannot open camera&quot;, e);&#10;                Toast.makeText(this, &quot;Không thể mở camera&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        }&#10;    }&#10;&#10;    // Kiểm tra và yêu cầu quyền truy cập thư viện&#10;    private void openGallery() {&#10;        if (checkGalleryPermission()) {&#10;            Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);&#10;            galleryLauncher.launch(intent);&#10;        }&#10;    }&#10;&#10;    // Kiểm tra quyền truy cập camera&#10;    private boolean checkCameraPermission() {&#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {&#10;            return true;&#10;        } else {&#10;            requestCameraPermissionLauncher.launch(Manifest.permission.CAMERA);&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // Kiểm tra quyền truy cập thư viện&#10;    private boolean checkGalleryPermission() {&#10;        String permission = Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU ?&#10;                Manifest.permission.READ_MEDIA_IMAGES : Manifest.permission.READ_EXTERNAL_STORAGE;&#10;&#10;        if (ContextCompat.checkSelfPermission(this, permission) == PackageManager.PERMISSION_GRANTED) {&#10;            return true;&#10;        } else {&#10;            requestGalleryPermissionLauncher.launch(permission);&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // Hiển thị hộp thoại khi quyền bị từ chối&#10;    private void showPermissionDeniedDialog(String message) {&#10;        new AlertDialog.Builder(this)&#10;                .setTitle(&quot;Yêu cầu quyền&quot;)&#10;                .setMessage(message + &quot; Vui lòng cấp quyền trong cài đặt ứng dụng.&quot;)&#10;                .setPositiveButton(&quot;OK&quot;, (dialog, which) -&gt; dialog.dismiss())&#10;                .create()&#10;                .show();&#10;    }&#10;&#10;    private void showError(String message) {&#10;        Snackbar snackbar = Snackbar.make(binding.getRoot(), message, Snackbar.LENGTH_LONG);&#10;        View sbView = snackbar.getView();&#10;        sbView.setBackgroundColor(0xFFD32F2F); // Red background&#10;        snackbar.setAction(&quot;Thử lại&quot;, v -&gt; {&#10;            // Retry logic can be implemented here if needed&#10;        });&#10;        snackbar.show();&#10;    }&#10;&#10;    private boolean isNetworkAvailable() {&#10;        ConnectivityManager cm = (ConnectivityManager) getSystemService(CONNECTIVITY_SERVICE);&#10;        if (cm != null) {&#10;            if (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.M) {&#10;                NetworkCapabilities nc = cm.getNetworkCapabilities(cm.getActiveNetwork());&#10;                return nc != null &amp;&amp; (nc.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) || nc.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR));&#10;            } else {&#10;                android.net.NetworkInfo ni = cm.getActiveNetworkInfo();&#10;                return ni != null &amp;&amp; ni.isConnected();&#10;            }&#10;        }&#10;        return false;&#10;    }&#10;&#10;    // Phân tích ảnh bằng ML Kit&#10;    private void analyzeImage(Bitmap bitmap) {&#10;        if (bitmap == null) {&#10;            showError(&quot;Ảnh không hợp lệ&quot;);&#10;            stopShimmer();&#10;            return;&#10;        }&#10;        binding.progressBar.setVisibility(View.GONE);&#10;        binding.chipGroupIngredients.removeAllViews();&#10;        try {&#10;            InputImage image = InputImage.fromBitmap(bitmap, 0);&#10;            labeler.process(image)&#10;                    .addOnSuccessListener(labels -&gt; {&#10;                        ArrayList&lt;String&gt; detectedIngredients = new ArrayList&lt;&gt;();&#10;                        for (ImageLabel label : labels) {&#10;                            if (label.getConfidence() &gt; 0.6f) {&#10;                                String ingredient = label.getText();&#10;                                detectedIngredients.add(ingredient);&#10;                                addIngredientChip(ingredient);&#10;                            }&#10;                        }&#10;                        stopShimmer();&#10;                        if (!detectedIngredients.isEmpty()) {&#10;                            binding.layoutIngredientsSection.setVisibility(View.VISIBLE);&#10;                            binding.layoutIngredientsSection.startAnimation(AnimationUtils.loadAnimation(this, R.anim.slide_up));&#10;                            binding.btnFindRecipe.setVisibility(View.VISIBLE);&#10;                        } else {&#10;                            showError(&quot;Không phát hiện nguyên liệu nào&quot;);&#10;                        }&#10;                    })&#10;                    .addOnFailureListener(e -&gt; {&#10;                        stopShimmer();&#10;                        Log.e(TAG, &quot;Image labeling failed&quot;, e);&#10;                        showError(&quot;Lỗi phân tích ảnh: &quot; + e.getMessage());&#10;                    });&#10;        } catch (IllegalArgumentException e) {&#10;            stopShimmer();&#10;            Log.e(TAG, &quot;Invalid image for ML Kit&quot;, e);&#10;            showError(&quot;Ảnh không hợp lệ cho phân tích: &quot; + e.getMessage());&#10;        } catch (Exception e) {&#10;            stopShimmer();&#10;            Log.e(TAG, &quot;Unexpected error in analyzeImage&quot;, e);&#10;            showError(&quot;Lỗi không xác định khi phân tích ảnh: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    // Thêm chip nguyên liệu vào ChipGroup&#10;    private void addIngredientChip(String ingredient) {&#10;        Chip chip = new Chip(this);&#10;        chip.setText(ingredient);&#10;        chip.setCloseIconVisible(true);&#10;        chip.setOnCloseIconClickListener(v -&gt; {&#10;            chip.startAnimation(AnimationUtils.loadAnimation(this, R.anim.chip_scale_in));&#10;            binding.chipGroupIngredients.removeView(chip);&#10;        });&#10;        chip.setBackgroundResource(R.drawable.chip_ripple);&#10;        chip.startAnimation(AnimationUtils.loadAnimation(this, R.anim.chip_scale_in));&#10;        binding.chipGroupIngredients.addView(chip);&#10;    }&#10;&#10;    private void startShimmer() {&#10;        if (shimmerLayout != null) {&#10;            shimmerLayout.setVisibility(View.VISIBLE);&#10;            shimmerLayout.startShimmer();&#10;        }&#10;        binding.progressBar.setVisibility(View.GONE);&#10;    }&#10;&#10;    private void stopShimmer() {&#10;        if (shimmerLayout != null) {&#10;            shimmerLayout.stopShimmer();&#10;            shimmerLayout.setVisibility(View.GONE);&#10;        }&#10;        binding.progressBar.setVisibility(View.GONE);&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        // Clean up resources if needed&#10;        // Example: labeler.close(); if labeler implements Closeable&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/chip_scale_in.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/chip_scale_in.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromXScale=&quot;0.8&quot;&#10;    android:toXScale=&quot;1.0&quot;&#10;    android:fromYScale=&quot;0.8&quot;&#10;    android:toYScale=&quot;1.0&quot;&#10;    android:pivotX=&quot;50%&quot;&#10;    android:pivotY=&quot;50%&quot;&#10;    android:duration=&quot;200&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/fade_in.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/fade_in.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromAlpha=&quot;0&quot;&#10;    android:toAlpha=&quot;1&quot;&#10;    android:duration=&quot;300&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/slide_up.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/slide_up.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromYDelta=&quot;50dp&quot;&#10;    android:toYDelta=&quot;0dp&quot;&#10;    android:duration=&quot;350&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/chip_ripple.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/chip_ripple.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:color=&quot;?attr/colorControlHighlight&quot;&gt;&#10;    &lt;item android:id=&quot;@android:id/mask&quot;&gt;&#10;        &lt;shape android:shape=&quot;rectangle&quot;&gt;&#10;            &lt;solid android:color=&quot;@android:color/white&quot;/&gt;&#10;        &lt;/shape&gt;&#10;    &lt;/item&gt;&#10;&lt;/ripple&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_foreground.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_foreground.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;108dp&quot;&#10;    android:height=&quot;108dp&quot;&#10;    android:viewportWidth=&quot;108&quot;&#10;    android:viewportHeight=&quot;108&quot;&gt;&#10;    &lt;!-- Chef hat icon, primary color --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/purple_500&quot;&#10;        android:pathData=&quot;M54,18c-10,0 -18,8 -18,18c0,4 2,8 5,10c-2,1 -3,3 -3,5c0,4 4,7 9,7h14c5,0 9,-3 9,-7c0,-2 -1,-4 -3,-5c3,-2 5,-6 5,-10c0,-10 -8,-18 -18,-18zM54,78c-8,0 -14,-6 -14,-14h28c0,8 -6,14 -14,14z&quot;/&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@color/white&quot;&#10;        android:pathData=&quot;M40,64h28v2c0,6 -6,12 -14,12s-14,-6 -14,-12v-2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;androidx.constraintlayout.widget.ConstraintLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;!--  Khung hiển thị ảnh chụp hoặc ảnh chọn --&gt;&#10;        &lt;com.google.android.material.card.MaterialCardView&#10;            android:id=&quot;@+id/cardPreview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_margin=&quot;16dp&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toTopOf=&quot;@id/layoutIngredientsSection&quot;&#10;            app:layout_constraintVertical_chainStyle=&quot;packed&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageViewPreview&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;250dp&quot;&#10;                android:adjustViewBounds=&quot;true&quot;&#10;                android:scaleType=&quot;centerCrop&quot; /&gt;&#10;        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;        &lt;!--  Khu vực hiển thị nguyên liệu phát hiện --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutIngredientsSection&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@id/cardPreview&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot; Nguyên liệu phát hiện được:&quot;&#10;                android:textAppearance=&quot;?attr/textAppearanceTitleMedium&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.ChipGroup&#10;                android:id=&quot;@+id/chipGroupIngredients&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                app:singleLine=&quot;false&quot;&#10;                app:singleSelection=&quot;false&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!--  Nhóm nút điều khiển --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/buttonsLayout&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnScan&quot;&#10;                style=&quot;?attr/materialButtonOutlinedStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot; Chụp ảnh&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnChooseFromGallery&quot;&#10;                style=&quot;?attr/materialButtonOutlinedStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;️ Chọn ảnh&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnFindRecipe&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot; Tìm công thức&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!--  Thanh tiến trình --&gt;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progressBar&quot;&#10;            style=&quot;?android:attr/progressBarStyle&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:indeterminateTint=&quot;?attr/colorPrimary&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;        &lt;!--  Trạng thái trống --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvEmptyState&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;\n\nChụp hoặc chọn ảnh tủ lạnh\nđể bắt đầu!&quot;&#10;            android:textAlignment=&quot;center&quot;&#10;            android:textColor=&quot;#757575&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:visibility=&quot;visible&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;androidx.constraintlayout.widget.ConstraintLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;!--  Khung hiển thị ảnh chụp hoặc ảnh chọn --&gt;&#10;        &lt;com.google.android.material.card.MaterialCardView&#10;            android:id=&quot;@+id/cardPreview&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_margin=&quot;16dp&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toTopOf=&quot;@id/layoutIngredientsSection&quot;&#10;            app:layout_constraintVertical_chainStyle=&quot;packed&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/imageViewPreview&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;250dp&quot;&#10;                android:adjustViewBounds=&quot;true&quot;&#10;                android:scaleType=&quot;centerCrop&quot; /&gt;&#10;        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;        &lt;!--  Khu vực hiển thị nguyên liệu phát hiện --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutIngredientsSection&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@id/cardPreview&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot; Nguyên liệu phát hiện được:&quot;&#10;                android:textAppearance=&quot;?attr/textAppearanceTitleMedium&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.ChipGroup&#10;                android:id=&quot;@+id/chipGroupIngredients&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                app:singleLine=&quot;false&quot;&#10;                app:singleSelection=&quot;false&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!--  Shimmer effect for progress --&gt;&#10;        &lt;include layout=&quot;@layout/shimmer_progress&quot;&#10;            android:id=&quot;@+id/shimmerInclude&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;        &lt;!--  Nhóm nút điều khiển --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/buttonsLayout&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnScan&quot;&#10;                style=&quot;?attr/materialButtonOutlinedStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot; Chụp ảnh&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnChooseFromGallery&quot;&#10;                style=&quot;?attr/materialButtonOutlinedStyle&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;️ Chọn ảnh&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnFindRecipe&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot; Tìm công thức&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!--  Thanh tiến trình --&gt;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progressBar&quot;&#10;            style=&quot;?android:attr/progressBarStyle&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:indeterminateTint=&quot;?attr/colorPrimary&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;        &lt;!--  Trạng thái trống --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvEmptyState&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;\n\nChụp hoặc chọn ảnh tủ lạnh\nđể bắt đầu!&quot;&#10;            android:textAlignment=&quot;center&quot;&#10;            android:textColor=&quot;#757575&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:visibility=&quot;visible&quot;&#10;            app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;            app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;            app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/shimmer_progress.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/shimmer_progress.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;com.facebook.shimmer.ShimmerFrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:id=&quot;@+id/shimmerLayout&quot;&#10;    android:layout_width=&quot;wrap_content&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_gravity=&quot;center&quot;&#10;    android:visibility=&quot;gone&quot;&gt;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/progressBar&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:indeterminateTint=&quot;@color/purple_500&quot; /&gt;&#10;&lt;/com.facebook.shimmer.ShimmerFrameLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;adaptive-icon xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;background android:drawable=&quot;@drawable/ic_launcher_background&quot; /&gt;&#10;    &lt;foreground android:drawable=&quot;@drawable/ic_launcher_foreground&quot; /&gt;&#10;    &lt;monochrome android:drawable=&quot;@drawable/ic_launcher_foreground&quot; /&gt;&#10;&lt;/adaptive-icon&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;adaptive-icon xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;background android:drawable=&quot;@color/purple_500&quot; /&gt;&#10;    &lt;foreground android:drawable=&quot;@drawable/ic_launcher_foreground&quot; /&gt;&#10;&lt;/adaptive-icon&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;SmartPantryChef&lt;/string&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Bếp SV Thông Minh&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/styles.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/styles.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;!-- Material Design 3 Chip Suggestion Style --&gt;&#10;    &lt;style name=&quot;Widget.Material3.Chip.Suggestion&quot; parent=&quot;Widget.MaterialComponents.Chip&quot;&gt;&#10;        &lt;item name=&quot;chipBackgroundColor&quot;&gt;?attr/colorSurface&lt;/item&gt;&#10;        &lt;item name=&quot;chipStrokeColor&quot;&gt;?attr/colorOutline&lt;/item&gt;&#10;        &lt;item name=&quot;chipStrokeWidth&quot;&gt;1dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;?attr/colorOnSurface&lt;/item&gt;&#10;        &lt;item name=&quot;closeIconTint&quot;&gt;?attr/colorOnSurface&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.SmartPantryChef&quot; parent=&quot;Theme.Material3.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/md_theme_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/md_theme_onPrimary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryContainer&quot;&gt;@color/md_theme_primaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimaryContainer&quot;&gt;@color/md_theme_onPrimaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/md_theme_secondary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/md_theme_onSecondary&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryContainer&quot;&gt;@color/md_theme_secondaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondaryContainer&quot;&gt;@color/md_theme_onSecondaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorTertiary&quot;&gt;@color/md_theme_tertiary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnTertiary&quot;&gt;@color/md_theme_onTertiary&lt;/item&gt;&#10;        &lt;item name=&quot;colorTertiaryContainer&quot;&gt;@color/md_theme_tertiaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnTertiaryContainer&quot;&gt;@color/md_theme_onTertiaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorError&quot;&gt;@color/md_theme_error&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnError&quot;&gt;@color/md_theme_onError&lt;/item&gt;&#10;        &lt;item name=&quot;colorErrorContainer&quot;&gt;@color/md_theme_errorContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnErrorContainer&quot;&gt;@color/md_theme_onErrorContainer&lt;/item&gt;&#10;        &lt;item name=&quot;android:colorBackground&quot;&gt;@color/md_theme_background&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnBackground&quot;&gt;@color/md_theme_onBackground&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/md_theme_surface&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/md_theme_onSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurfaceVariant&quot;&gt;@color/md_theme_surfaceVariant&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurfaceVariant&quot;&gt;@color/md_theme_onSurfaceVariant&lt;/item&gt;&#10;        &lt;item name=&quot;colorOutline&quot;&gt;@color/md_theme_outline&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurfaceInverse&quot;&gt;@color/md_theme_inverseOnSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurfaceInverse&quot;&gt;@color/md_theme_inverseSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryInverse&quot;&gt;@color/md_theme_inversePrimary&lt;/item&gt;&#10;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimary&lt;/item&gt;&#10;        &lt;item name=&quot;android:windowLightStatusBar&quot;&gt;false&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.SmartPantryChef&quot; parent=&quot;Base.Theme.SmartPantryChef&quot; /&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.SmartPantryChef&quot; parent=&quot;Theme.Material3.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/md_theme_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/md_theme_onPrimary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryContainer&quot;&gt;@color/md_theme_primaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimaryContainer&quot;&gt;@color/md_theme_onPrimaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/md_theme_secondary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/md_theme_onSecondary&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryContainer&quot;&gt;@color/md_theme_secondaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondaryContainer&quot;&gt;@color/md_theme_onSecondaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorTertiary&quot;&gt;@color/md_theme_tertiary&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnTertiary&quot;&gt;@color/md_theme_onTertiary&lt;/item&gt;&#10;        &lt;item name=&quot;colorTertiaryContainer&quot;&gt;@color/md_theme_tertiaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnTertiaryContainer&quot;&gt;@color/md_theme_onTertiaryContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorError&quot;&gt;@color/md_theme_error&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnError&quot;&gt;@color/md_theme_onError&lt;/item&gt;&#10;        &lt;item name=&quot;colorErrorContainer&quot;&gt;@color/md_theme_errorContainer&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnErrorContainer&quot;&gt;@color/md_theme_onErrorContainer&lt;/item&gt;&#10;        &lt;item name=&quot;android:colorBackground&quot;&gt;@color/md_theme_background&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnBackground&quot;&gt;@color/md_theme_onBackground&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/md_theme_surface&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/md_theme_onSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurfaceVariant&quot;&gt;@color/md_theme_surfaceVariant&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurfaceVariant&quot;&gt;@color/md_theme_onSurfaceVariant&lt;/item&gt;&#10;        &lt;item name=&quot;colorOutline&quot;&gt;@color/md_theme_outline&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurfaceInverse&quot;&gt;@color/md_theme_inverseOnSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurfaceInverse&quot;&gt;@color/md_theme_inverseSurface&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryInverse&quot;&gt;@color/md_theme_inversePrimary&lt;/item&gt;&#10;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimary&lt;/item&gt;&#10;        &lt;item name=&quot;android:windowLightStatusBar&quot;&gt;false&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.SmartPantryChef&quot; parent=&quot;Base.Theme.SmartPantryChef&quot; /&gt;&#10;&#10;    &lt;style name=&quot;Theme.BepSVThongMinh.Splash&quot; parent=&quot;Theme.SplashScreen&quot;&gt;&#10;        &lt;item name=&quot;windowSplashScreenBackground&quot;&gt;@color/purple_500&lt;/item&gt;&#10;        &lt;item name=&quot;windowSplashScreenAnimatedIcon&quot;&gt;@drawable/ic_launcher_foreground&lt;/item&gt;&#10;        &lt;item name=&quot;windowSplashScreenIconBackgroundColor&quot;&gt;@color/white&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>